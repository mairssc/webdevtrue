{"ast":null,"code":"var _jsxFileName = \"/Users/abhiwadekar/Desktop/UCB/sp21/breakout/ry/rykerblog/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [blogs, setBlogs] = useState(null); // [ \n  //     {title: 'My New Website', body: 'lorem ipsum', author: 'ry', id: 1},\n  //     {title: 'what\\'s up', body: 'hi', author: 'ry', id: 2},\n  // ]);\n\n  const handleDelete = id => {\n    const newBlog = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlog);\n  }; // USEEFFECT LESSON\n  // useful to fetch data\n  //empty useEffect() runs at every render\n\n\n  useEffect(() => {\n    console.log('use effect ran');\n    console.log(blogs);\n  }); //DONT set state here!\n  //useeffect with dependencies\n  //this one is basically componentdidmount or when the component renders for the first time\n  // useEffect(() => {\n  //     console.log('use effect ran again');\n  //     console.log(blogs)\n  // }, []); \n\n  useEffect(() => {\n    //can't use async inside this but can externalize the async method if you want\n    fetch('http://localhost:8000/blogs').then(response => {\n      return response.json();\n    }).then(data => {\n      //we finally have the data smh\n      console.log(data);\n      setBlogs(data); //will this cause an infinite loop?\n    });\n  }, []);\n  const [name, setName] = useState('mario'); //state variable\n\n  useEffect(() => {\n    console.log('use effect ran 3');\n    console.log(name);\n  }, [name]); // const handleClick\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName(name === 'luigi' ? 'mario' : 'luigi'),\n      children: \"change name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"qZyGukXhPYPPy1bCb7mB/BlxX58=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/abhiwadekar/Desktop/UCB/sp21/breakout/ry/rykerblog/src/Home.js"],"names":["useState","useEffect","BlogList","Home","blogs","setBlogs","handleDelete","id","newBlog","filter","blog","console","log","fetch","then","response","json","data","name","setName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC,CAF2B,CAG3B;AACA;AACA;AACA;;AAEA,QAAMM,YAAY,GAAIC,EAAD,IAAQ;AACzB,UAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAhB;AACAF,IAAAA,QAAQ,CAACG,OAAD,CAAR;AACH,GAHD,CAR2B,CAa/B;AACA;AAEI;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAHQ,CAAT,CAjB2B,CAsB3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAZ,MAAAA,QAAQ,CAACY,IAAD,CAAR,CAHU,CAGM;AACnB,KARL;AASH,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,OAAD,CAAhC,CA3C2B,CA4C3B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACH,GAHQ,EAGP,CAACA,IAAD,CAHO,CAAT,CA7C2B,CAiD3B;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BAYI;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAACD,IAAI,KAAG,OAAP,GAAe,OAAf,GAAuB,OAAxB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlEuBf,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport BlogList from './BlogList';\n\nexport default function Home() {\n\n    const [blogs, setBlogs] = useState(null);\n    // [ \n    //     {title: 'My New Website', body: 'lorem ipsum', author: 'ry', id: 1},\n    //     {title: 'what\\'s up', body: 'hi', author: 'ry', id: 2},\n    // ]);\n\n    const handleDelete = (id) => {\n        const newBlog = blogs.filter((blog) => blog.id !== id);\n        setBlogs(newBlog);\n    }  \n\n// USEEFFECT LESSON\n// useful to fetch data\n\n    //empty useEffect() runs at every render\n    useEffect(() => {\n        console.log('use effect ran');\n        console.log(blogs)\n    }); \n\n    //DONT set state here!\n\n    //useeffect with dependencies\n    //this one is basically componentdidmount or when the component renders for the first time\n    // useEffect(() => {\n    //     console.log('use effect ran again');\n    //     console.log(blogs)\n    // }, []); \n    useEffect(() => {\n        //can't use async inside this but can externalize the async method if you want\n        fetch('http://localhost:8000/blogs')\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                //we finally have the data smh\n                console.log(data);\n                setBlogs(data); //will this cause an infinite loop?\n            })\n    }, []); \n\n    const [name, setName] = useState('mario')\n    //state variable\n    useEffect(() => {\n        console.log('use effect ran 3');\n        console.log(name);\n    },[name])\n    // const handleClick\n    return(\n        <div className=\"home\">\n            {/* <BlogList />  we need props! */}\n\n            {/* <BlogList blogs={blogs} title=\"\" handleDelete ={handleDelete}/> */}\n            {/* <BlogList blogs={blogs.filter( (blogs) => blogs.id !== 2 )} title=\"!!\" /> */}\n            {/* <h2>Homepage</h2>\n            {blogs.map((blog) => (\n                <div className=\"blog-preview\">\n                    <h2>{blog.title}</h2>\n                    <p>Written by {blog.author}</p>\n                </div>\n            ))} */}\n            <button onClick={() => setName(name==='luigi'?'mario':'luigi')}>change name</button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}